Приветствую всех, кто будет читать это.

  Я хочу дать краткое пояснение некоторым моментам кода, на случай если возникнут вопросы.
  Времени у нас было совсем мало, а задачи были объемные. Мы старались сделать все интересно и правильно,
  хотя, безусловно, мы понимаем, что нет предела совершенству и можно сделать еще лучше. Стремимся к этому. Надеемся нам дадут возможность и выделят время на рефакторинг.

  1. Миграции
          Изначально планировалось полностью описать миграции, но база притерпевала очень много изменений каждый день
        и оценивая сроки, было принято решение оставить те что есть, но пока перестать их расширять. Мы знаем
        о необходимости миграций, о важности этого инструмента и безусловно будем поддерживать их на протяжении
        всего проекта в дальнейшем.

  2. Laravel. PHP
        Конечно же PHP 7+. Стараемся идти в ногу со временем =)
        Laravel. Я использовал данный фреймворк так у нас есть хороший опыт работы с ним. Он популярен и в
      будущем будет только развиваться. В свободном доступе имеется огромный объем документации и материалов
      по новым возможностям и устаревшим методам. Это позволит нам эффективно использовать возможности этого
      мощного инструмента избегая устаревших фич.

  3. Конструктор:
        Я ушел чуть дальше чем просто управление значениями селектов или чекбоксов и дал возможность управлять
      таблицами более глубоко. Безусловно это далеко от идеала в большей степени из за сроков, но нам
      хотелось показать, что для нас нет рамок и мы можем реализовывать интересные и функциональные решения.
      Конструктор отлично работает с болшинством таблиц, но таблицы со сложной логикой на данный момент вне этой
      архитектуры.

  4. Хранение информации(объекта) о трите
        Хотелось бы поговорить о некоторых моментах. Я описывал дублировал это в комментария в коде, но скажу
      об этом  и тут. На данный момент информация хранится одним куском. Я понимаю, что так этого делать нельзя,
      но в рамках тестового задания этого было достаточно. В будущем мы сможем обсудить, какие события будут
      случаться с объектом трита и перепроектировать базу таким образом, что бы скорость работы с ним была максимальной,
      а получение любых отдельных данных удобным

  5. Регистрация
         Модуль регистрации написан на основе стандартной регистрации Laravel. Он содержит в себе все необходимые
       базовые проверки и тригеры. Может быть расширен. Так же присутствует отправка писем для проверки мэйлов.

  6. Создание трита
         Достаточно сложный и объемный кусок. Очень много логики управляется фронтендом.


        Из общих моментов можно выделить то, что сайт написан с минимальным колличеством перезагрузки страниц.
    В основном релоад происходит только на сменах логики и функционала. Внутри кода вы можете заметить реализацию
    похожих вещей разными способами, как например SQL нативные запросы и или ORM. Просто функции или статику. Синглтон.
    Мы не утверждаем, что это необходимо, просто хотелось показать, что знаем и можем.

    Благодарю за внимание. Если возникнут вопросы, обращайтесь и я с радостью отвечу.
    Всем удачи и возможно до встречи на митингах!